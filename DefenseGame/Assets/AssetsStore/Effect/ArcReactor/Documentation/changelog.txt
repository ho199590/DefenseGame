1.9b (5.6+ only) 
 - swapped .js player controller scripts from standard assets to c# ones to comply with Unity2017
 - added some checks to prevent ArcReactor trying to destroy GameObjects that were already destroyed by 3rd party scripts
 - minor fixes in demo

1.9 (5.6+ only)
 - rewroked reflection visualization
 - fixed plasmaray_reflective prefab
 - fixed null reference error on Launcher and Launcher 2D destruction
 - changed ArcReactor parameter "Camera mainCamera" to "Transform mainCameraTransform"
 -- added mainCameraTransform to Launchers for transfer to spawned ArcReactor systems
 - added ability to parent pooled arcs
 - flares prefabs
 - added optional limit for number of reflections ("reflection count limit" parameter of Launcher and Launcher2D components)
 

1.8 (5.5+ only)
 - Compatibility changes to LineRenderer and Shuriken due to Unity 5.5 release
 - Added "scaleLimit" parameter to SpatialNoise options that allows to set maximum deviation of randomized ray from it's supposed position
 - Added "tangentsFromTransforms" option for ray-binding type of effects (similar to proton packs from Ghostbusters)
 - Changes to Size options of ArcReactor_Arc component
 -- !!onlyStartWidth bool changed to shape type enum since LineRenderer now supports width curves. If your arcs have this bool set to false, please set new parameter to "start_end".
 -- Deprecated inertia from Launcher (tangentsFromTransforms works better for that effect)
 - Improved performance of swirl oscillations
 - Added ProtonPack prefab
 - (Editor)Added tool-tips in inspectors
 - (Editor)Moved component self-check from Start() of ArcReactor_Arc to editor inspector
 - (Demo)Added scene selection, added UI hints, migrated from outdated UI system.
 - (Fix)Dynamically destroyed Launchers no longer leave shape transforms behind
 - (Fix)Removed dependence on ParticleSystem.IsAlive since it provided unreliable results
 - (Fix)Fixed artifact on instantiating new trail.

1.7 (Unity 5.3+ only!):
 - Added pool manager for optimized performance, especially on mobiles
 - Integrated Launcher and Launcher2D components with pool manager
 - Added new playback types: pingpong_once and pingpong_clamp_once for use in continuous rays
 - Rewritten gun controller in DemoScene1 to use new playback types for continuous rays
 - ArcReactor now sends playback messages even on "once" playback type at the end of the lifetime, right before destruction
 - Completely rewritten Shuriken emission (increased performance, better compatibility with Shuriken settings)
 -- Removed randomization override options from Emission Options (ArcReactor emission now stays true to all Shuriken options)
 -- !! Possible prefab-breaking
 	- !! Emission options: Changed startColorByRay bool option to rayColorInfluence float (default value is 0.5)
    - !! Emission options: Changed Shuriken particle system definition in Emission Options from GameObject to ParticleSystem to avoid GetComponent calls
      !!! Make sure to check your emission options if you use particle emission in your prefabs and re-drag-n-drop your systems
 

1.6:
 - Fixed constant GC generation by idle Launcher
 - Added Launcher2D which supports 2D colliders
 - Added simple 2D game demo scene with reflections
 - Added ArcReactor_Trail component - alternative to Launcher. It will draw shape based on movement of GameObject
 - Added trails demo scene
 - Fixed Android fade bug. 

1.5b
 - minor compatibility changes

1.5
 - added playback messages
 - added Clamp playback type
 - added Size Multiplier variable which allows scaling ray system as a whole
 - changed left-over particles system behaviour(fixed null reference errors, better perfromance)
 - changed particles emission mechanism (more stability in emissions, randomization support)
 - fixed interframe interpolation for emission shape (no more rogue particles at the start of the system)
 - added new ready-to-use ray prefabs - fire ray, ice ray, oscillating plasma ray
 

1.4b
 - fixed Touched object messaging when combined with physical propagation
 - fixed shape transforms check at startup (now includes shape points)

1.4
 - added physical ray propagation (ArcReactor_Launcher)
 - added Touched object messaging (ArcReactor_Launcher)
 - added Shape curves settings (ArcReactor_Arc)
 - Complex nesting - now you can nest arc to 2 other arc with mix coefficient (ArcReactor_Arc)
 - Shape texture option added (ArcReactor_Arc)
 - improved Noise texture controls (ArcReactor_Arc)
 - Combined shape definition - supports mixture of Transforms and Vector3's (ArcReactor_Arc)
 

1.3c
 - added ray fading

1.3b
 - Disabled no reciever error message for events
 - fixed lacking of messaging on non-reflecting rays

1.3
 - Shuriken Particles emitting from rays
 - "freeze" toggle allows stopping ray timeline progression
 - added ArcReactorHit class for transmitting hit info in messages
 - changed main logic of ArcReactor_Launcher from Update to LateUpdate to prevent rendering order issues
 - added GetOldArcPoint method for interframe interpolation
 - added 1 prefab(rainbow ray), added particles emitting to prefabs
 

1.2b:
 - manual updates
 - small bug fixes

1.2:
 - on-the-fly change of shapeTransforms array allowed
 - improved precision of shape calculatons
 - vertex-to-transform snapping option
 - ArcReactorLauncher supports reflections of rays
 - 2 more demo scenes: reflections example and shape tracing example
 - changed folder structure of demo scenes
 - small bug fixes
 
 
1.1:
 - performance manager
 - flare support
 - modular random spatial noise system 
 - added 3 more ready-to-use prefabs
 - small bug fixes